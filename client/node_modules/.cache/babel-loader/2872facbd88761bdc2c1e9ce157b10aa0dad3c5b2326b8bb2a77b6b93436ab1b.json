{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nfunction CustomerForm({\n  customerId\n}) {\n  _s();\n  const [customer, setCustomer] = useState({\n    first_name: '',\n    last_name: '',\n    phone: '',\n    city: '',\n    state: '',\n    pincode: ''\n  });\n  const navigate = useNavigate();\n\n  // Fetch customer details when editing\n  useEffect(() => {\n    if (customerId) {\n      axios.get(`http://localhost:5000/api/customers/${customerId}`).then(res => {\n        setCustomer(res.data);\n      }).catch(err => {\n        console.error('Error fetching customer:', err);\n        alert('Error fetching customer data');\n      });\n    }\n  }, [customerId]); // ✅ Only depending on customerId\n  // eslint warning resolved\n\n  // Handle input changes\n  function handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setCustomer(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  }\n\n  // Handle form submission\n  function handleSubmit(e) {\n    e.preventDefault();\n    const url = customerId ? `http://localhost:5000/api/customers/${customerId}` : 'http://localhost:5000/api/customers';\n    const method = customerId ? 'put' : 'post';\n    axios[method](url, customer).then(() => {\n      alert(customerId ? 'Customer updated successfully!' : 'Customer created successfully!');\n      navigate('/');\n    }).catch(err => {\n      console.error('Error saving customer:', err);\n      alert('Error creating customer');\n    });\n  }\n  return /*#__PURE__*/React.createElement('form', {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/React.createElement('input', {\n    name: 'first_name',\n    value: customer.first_name,\n    onChange: handleChange,\n    placeholder: 'First Name',\n    required: true\n  }), /*#__PURE__*/React.createElement('input', {\n    name: 'last_name',\n    value: customer.last_name,\n    onChange: handleChange,\n    placeholder: 'Last Name',\n    required: true\n  }), /*#__PURE__*/React.createElement('input', {\n    name: 'phone',\n    value: customer.phone,\n    onChange: handleChange,\n    placeholder: 'Phone',\n    required: true\n  }), /*#__PURE__*/React.createElement('input', {\n    name: 'city',\n    value: customer.city,\n    onChange: handleChange,\n    placeholder: 'City'\n  }), /*#__PURE__*/React.createElement('input', {\n    name: 'state',\n    value: customer.state,\n    onChange: handleChange,\n    placeholder: 'State'\n  }), /*#__PURE__*/React.createElement('input', {\n    name: 'pincode',\n    value: customer.pincode,\n    onChange: handleChange,\n    placeholder: 'Pincode'\n  }), /*#__PURE__*/React.createElement('button', {\n    type: 'submit'\n  }, 'Save'));\n}\n_s(CustomerForm, \"mtgE00ez7r2jlsZ25EcIT3yUlvM=\", false, function () {\n  return [useNavigate];\n});\n_c = CustomerForm;\nexport default CustomerForm;\nvar _c;\n$RefreshReg$(_c, \"CustomerForm\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","CustomerForm","customerId","_s","customer","setCustomer","first_name","last_name","phone","city","state","pincode","navigate","get","then","res","data","catch","err","console","error","alert","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","url","method","createElement","onSubmit","onChange","placeholder","required","type","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/customer_management_app/client/src/components/CustomerForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction CustomerForm({ customerId }) {\r\n  const [customer, setCustomer] = useState({\r\n    first_name: '',\r\n    last_name: '',\r\n    phone: '',\r\n    city: '',\r\n    state: '',\r\n    pincode: '',\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch customer details when editing\r\n  useEffect(() => {\r\n    if (customerId) {\r\n      axios.get(`http://localhost:5000/api/customers/${customerId}`)\r\n        .then(res => {\r\n          setCustomer(res.data);\r\n        })\r\n        .catch(err => {\r\n          console.error('Error fetching customer:', err);\r\n          alert('Error fetching customer data');\r\n        });\r\n    }\r\n  }, [customerId]); // ✅ Only depending on customerId\r\n  // eslint warning resolved\r\n\r\n  // Handle input changes\r\n  function handleChange(e) {\r\n    const { name, value } = e.target;\r\n    setCustomer(prev => ({ ...prev, [name]: value }));\r\n  }\r\n\r\n  // Handle form submission\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const url = customerId\r\n      ? `http://localhost:5000/api/customers/${customerId}`\r\n      : 'http://localhost:5000/api/customers';\r\n\r\n    const method = customerId ? 'put' : 'post';\r\n\r\n    axios[method](url, customer)\r\n      .then(() => {\r\n        alert(customerId ? 'Customer updated successfully!' : 'Customer created successfully!');\r\n        navigate('/');\r\n      })\r\n      .catch(err => {\r\n        console.error('Error saving customer:', err);\r\n        alert('Error creating customer');\r\n      });\r\n  }\r\n\r\n  return React.createElement(\r\n    'form',\r\n    { onSubmit: handleSubmit },\r\n\r\n    React.createElement('input', {\r\n      name: 'first_name',\r\n      value: customer.first_name,\r\n      onChange: handleChange,\r\n      placeholder: 'First Name',\r\n      required: true,\r\n    }),\r\n\r\n    React.createElement('input', {\r\n      name: 'last_name',\r\n      value: customer.last_name,\r\n      onChange: handleChange,\r\n      placeholder: 'Last Name',\r\n      required: true,\r\n    }),\r\n\r\n    React.createElement('input', {\r\n      name: 'phone',\r\n      value: customer.phone,\r\n      onChange: handleChange,\r\n      placeholder: 'Phone',\r\n      required: true,\r\n    }),\r\n\r\n    React.createElement('input', {\r\n      name: 'city',\r\n      value: customer.city,\r\n      onChange: handleChange,\r\n      placeholder: 'City',\r\n    }),\r\n\r\n    React.createElement('input', {\r\n      name: 'state',\r\n      value: customer.state,\r\n      onChange: handleChange,\r\n      placeholder: 'State',\r\n    }),\r\n\r\n    React.createElement('input', {\r\n      name: 'pincode',\r\n      value: customer.pincode,\r\n      onChange: handleChange,\r\n      placeholder: 'Pincode',\r\n    }),\r\n\r\n    React.createElement('button', { type: 'submit' }, 'Save')\r\n  );\r\n}\r\n\r\nexport default CustomerForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}