{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nfunction AddressForm({\n  customerId,\n  onAddressAdded\n}) {\n  _s();\n  const [address, setAddress] = useState({\n    street: '',\n    city: '',\n    state: '',\n    pincode: ''\n  });\n  function handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setAddress(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    axios.post(`http://localhost:5000/api/customers/${customerId}/addresses`, address).then(res => {\n      alert('Address saved successfully');\n      setAddress({\n        street: '',\n        city: '',\n        state: '',\n        pincode: ''\n      });\n      if (onAddressAdded) onAddressAdded();\n    }).catch(err => {\n      console.error('Error saving address:', err);\n      alert('Error saving address');\n    });\n  }\n  return /*#__PURE__*/React.createElement('form', {\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/React.createElement('input', {\n    name: 'street',\n    value: address.street,\n    onChange: handleChange,\n    placeholder: 'Street',\n    required: true\n  }), /*#__PURE__*/React.createElement('input', {\n    name: 'city',\n    value: address.city,\n    onChange: handleChange,\n    placeholder: 'City',\n    required: true\n  }), /*#__PURE__*/React.createElement('input', {\n    name: 'state',\n    value: address.state,\n    onChange: handleChange,\n    placeholder: 'State'\n  }), /*#__PURE__*/React.createElement('input', {\n    name: 'pincode',\n    value: address.pincode,\n    onChange: handleChange,\n    placeholder: 'Pincode'\n  }), /*#__PURE__*/React.createElement('button', {\n    type: 'submit'\n  }, 'Save Address'));\n}\n_s(AddressForm, \"kFt96MLmcAKYgb3hw5XrsXx8KfY=\");\n_c = AddressForm;\nexport default AddressForm;\nvar _c;\n$RefreshReg$(_c, \"AddressForm\");","map":{"version":3,"names":["React","useState","axios","AddressForm","customerId","onAddressAdded","_s","address","setAddress","street","city","state","pincode","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","post","then","res","alert","catch","err","console","error","createElement","onSubmit","onChange","placeholder","required","type","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/customer_management_app/client/src/components/AddressForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction AddressForm({ customerId, onAddressAdded }) {\r\n  const [address, setAddress] = useState({\r\n    street: '',\r\n    city: '',\r\n    state: '',\r\n    pincode: '',\r\n  });\r\n\r\n  function handleChange(e) {\r\n    const { name, value } = e.target;\r\n    setAddress(prev => ({ ...prev, [name]: value }));\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    axios.post(`http://localhost:5000/api/customers/${customerId}/addresses`, address)\r\n      .then(res => {\r\n        alert('Address saved successfully');\r\n        setAddress({ street: '', city: '', state: '', pincode: '' });\r\n        if (onAddressAdded) onAddressAdded();\r\n      })\r\n      .catch(err => {\r\n        console.error('Error saving address:', err);\r\n        alert('Error saving address');\r\n      });\r\n  }\r\n\r\n  return React.createElement('form', { onSubmit: handleSubmit }, \r\n    React.createElement('input', {\r\n      name: 'street',\r\n      value: address.street,\r\n      onChange: handleChange,\r\n      placeholder: 'Street',\r\n      required: true,\r\n    }),\r\n    React.createElement('input', {\r\n      name: 'city',\r\n      value: address.city,\r\n      onChange: handleChange,\r\n      placeholder: 'City',\r\n      required: true,\r\n    }),\r\n    React.createElement('input', {\r\n      name: 'state',\r\n      value: address.state,\r\n      onChange: handleChange,\r\n      placeholder: 'State',\r\n    }),\r\n    React.createElement('input', {\r\n      name: 'pincode',\r\n      value: address.pincode,\r\n      onChange: handleChange,\r\n      placeholder: 'Pincode',\r\n    }),\r\n    React.createElement('button', { type: 'submit' }, 'Save Address')\r\n  );\r\n}\r\n\r\nexport default AddressForm;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,WAAWA,CAAC;EAAEC,UAAU;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EACnD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC;IACrCQ,MAAM,EAAE,EAAE;IACVC,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,SAASC,YAAYA,CAACC,CAAC,EAAE;IACvB,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCT,UAAU,CAACU,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACH,IAAI,GAAGC;IAAM,CAAC,CAAC,CAAC;EAClD;EAEA,SAASG,YAAYA,CAACL,CAAC,EAAE;IACvBA,CAAC,CAACM,cAAc,CAAC,CAAC;IAElBlB,KAAK,CAACmB,IAAI,CAAC,uCAAuCjB,UAAU,YAAY,EAAEG,OAAO,CAAC,CAC/Ee,IAAI,CAACC,GAAG,IAAI;MACXC,KAAK,CAAC,4BAA4B,CAAC;MACnChB,UAAU,CAAC;QAAEC,MAAM,EAAE,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,OAAO,EAAE;MAAG,CAAC,CAAC;MAC5D,IAAIP,cAAc,EAAEA,cAAc,CAAC,CAAC;IACtC,CAAC,CAAC,CACDoB,KAAK,CAACC,GAAG,IAAI;MACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;MAC3CF,KAAK,CAAC,sBAAsB,CAAC;IAC/B,CAAC,CAAC;EACN;EAEA,oBAAOxB,KAAK,CAAC6B,aAAa,CAAC,MAAM,EAAE;IAAEC,QAAQ,EAAEX;EAAa,CAAC,eAC3DnB,KAAK,CAAC6B,aAAa,CAAC,OAAO,EAAE;IAC3Bd,IAAI,EAAE,QAAQ;IACdC,KAAK,EAAET,OAAO,CAACE,MAAM;IACrBsB,QAAQ,EAAElB,YAAY;IACtBmB,WAAW,EAAE,QAAQ;IACrBC,QAAQ,EAAE;EACZ,CAAC,CAAC,eACFjC,KAAK,CAAC6B,aAAa,CAAC,OAAO,EAAE;IAC3Bd,IAAI,EAAE,MAAM;IACZC,KAAK,EAAET,OAAO,CAACG,IAAI;IACnBqB,QAAQ,EAAElB,YAAY;IACtBmB,WAAW,EAAE,MAAM;IACnBC,QAAQ,EAAE;EACZ,CAAC,CAAC,eACFjC,KAAK,CAAC6B,aAAa,CAAC,OAAO,EAAE;IAC3Bd,IAAI,EAAE,OAAO;IACbC,KAAK,EAAET,OAAO,CAACI,KAAK;IACpBoB,QAAQ,EAAElB,YAAY;IACtBmB,WAAW,EAAE;EACf,CAAC,CAAC,eACFhC,KAAK,CAAC6B,aAAa,CAAC,OAAO,EAAE;IAC3Bd,IAAI,EAAE,SAAS;IACfC,KAAK,EAAET,OAAO,CAACK,OAAO;IACtBmB,QAAQ,EAAElB,YAAY;IACtBmB,WAAW,EAAE;EACf,CAAC,CAAC,eACFhC,KAAK,CAAC6B,aAAa,CAAC,QAAQ,EAAE;IAAEK,IAAI,EAAE;EAAS,CAAC,EAAE,cAAc,CAClE,CAAC;AACH;AAAC5B,EAAA,CAzDQH,WAAW;AAAAgC,EAAA,GAAXhC,WAAW;AA2DpB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}