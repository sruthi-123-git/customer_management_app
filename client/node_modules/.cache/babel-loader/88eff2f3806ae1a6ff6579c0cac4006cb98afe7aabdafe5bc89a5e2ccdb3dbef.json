{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\customer_management_app\\\\client\\\\src\\\\components\\\\AddressForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddressForm({\n  address = {},\n  customerId,\n  onSave\n}) {\n  _s();\n  const [form, setForm] = useState({\n    address: address.address || '',\n    city: address.city || '',\n    state: address.state || '',\n    pincode: address.pincode || ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const request = address.id ? axios.put(`http://localhost:5000/api/addresses/${address.id}`, form) : axios.post(`http://localhost:5000/api/customers/${customerId}/addresses`, form);\n    request.then(() => {\n      onSave(); // Refresh the address list\n      setForm({\n        address: '',\n        city: '',\n        state: '',\n        pincode: ''\n      }); // Clear form\n    }).catch(err => {\n      console.error('Error saving address:', err);\n      alert('Failed to save address.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      marginBottom: '1rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"address\",\n      value: form.address,\n      onChange: handleChange,\n      placeholder: \"Address\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"city\",\n      value: form.city,\n      onChange: handleChange,\n      placeholder: \"City\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"state\",\n      value: form.state,\n      onChange: handleChange,\n      placeholder: \"State\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"pincode\",\n      value: form.pincode,\n      onChange: handleChange,\n      placeholder: \"Pincode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: address.id ? 'Update Address' : 'Add Address'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(AddressForm, \"+ktk6eRfQ1FAMsBFywkxHkjZzN4=\");\n_c = AddressForm;\nexport default AddressForm;\nvar _c;\n$RefreshReg$(_c, \"AddressForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AddressForm","address","customerId","onSave","_s","form","setForm","city","state","pincode","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","request","id","put","post","then","catch","err","console","error","alert","onSubmit","style","marginBottom","children","type","onChange","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/customer_management_app/client/src/components/AddressForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction AddressForm({ address = {}, customerId, onSave }) {\r\n  const [form, setForm] = useState({\r\n    address: address.address || '',\r\n    city: address.city || '',\r\n    state: address.state || '',\r\n    pincode: address.pincode || ''\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setForm((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const request = address.id\r\n      ? axios.put(`http://localhost:5000/api/addresses/${address.id}`, form)\r\n      : axios.post(`http://localhost:5000/api/customers/${customerId}/addresses`, form);\r\n\r\n    request\r\n      .then(() => {\r\n        onSave(); // Refresh the address list\r\n        setForm({ address: '', city: '', state: '', pincode: '' }); // Clear form\r\n      })\r\n      .catch((err) => {\r\n        console.error('Error saving address:', err);\r\n        alert('Failed to save address.');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} style={{ marginBottom: '1rem' }}>\r\n      <input\r\n        type=\"text\"\r\n        name=\"address\"\r\n        value={form.address}\r\n        onChange={handleChange}\r\n        placeholder=\"Address\"\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        name=\"city\"\r\n        value={form.city}\r\n        onChange={handleChange}\r\n        placeholder=\"City\"\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        name=\"state\"\r\n        value={form.state}\r\n        onChange={handleChange}\r\n        placeholder=\"State\"\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        name=\"pincode\"\r\n        value={form.pincode}\r\n        onChange={handleChange}\r\n        placeholder=\"Pincode\"\r\n      />\r\n      <button type=\"submit\">\r\n        {address.id ? 'Update Address' : 'Add Address'}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddressForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}